{"version":3,"file":"static/js/555.c683adbb.chunk.js","mappings":"yKACA,GAAgB,kBAAoB,oCAAoC,WAAa,8B,uCCmB/EA,EAAO,WACT,OAAoBC,EAAAA,EAAAA,UAA2B,MAA/C,eAAOC,EAAP,KAAWC,EAAX,KA+BA,OA7BAC,EAAAA,EAAAA,YAAU,WACN,IAAIC,EACEC,EAAe,WACjBC,WAAWC,EAAe,MAG9B,SAASA,IAAiB,IAAD,IAEf,QAAN,EAAAH,SAAA,SAAQI,oBAAoB,QAASH,GAC/B,QAAN,EAAAD,SAAA,SAAQK,SAERL,EAAS,IAAIM,UAAU,iEAChBC,iBAAiB,QAASN,GACjCH,EAAME,GAKV,OAFAG,IAEO,WACHH,EAAOI,oBAAoB,QAASH,GACpCD,EAAOK,WAEZ,KAEHN,EAAAA,EAAAA,YAAU,cAGP,CAACF,KAGA,4BACI,SAACW,EAAD,CAAUX,GAAIA,KACd,SAACY,EAAD,CAAoBZ,GAAIA,QAK9BW,EAA+C,SAAC,GAAU,IAATX,EAAQ,EAARA,GAEnD,GAAgCD,EAAAA,EAAAA,UAA4B,IAA5D,eAAOc,EAAP,KAAiBC,EAAjB,KACIC,EAAmB,SAACC,GACpB,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BN,GAAY,SAACO,GAAD,wBAAsBA,IAAtB,OAAuCJ,QAUvD,OARAf,EAAAA,EAAAA,YAAU,WAGN,OAFE,OAAFF,QAAE,IAAFA,GAAAA,EAAIU,iBAAiB,UAAWK,GAEzB,WACD,OAAFf,QAAE,IAAFA,GAAAA,EAAIO,oBAAoB,UAAWQ,MAExC,CAACf,KAGA,gBAAKsB,UAAWC,EAAAA,kBAAhB,SACKV,EAASW,KAAI,SAACC,EAAGC,GAAJ,OAAc,SAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAKhDC,EAAkD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEtD,OACI,4BACI,gBAAKC,IAAKD,EAAQE,MAAOR,UAAWC,EAAAA,aADxC,KACwD,uBAAIK,EAAQG,YAChE,kBACCH,EAAQA,SACT,sBAKNhB,EAAyD,SAAC,GAAU,IAATZ,EAAQ,EAARA,GAE7D,GAA8BD,EAAAA,EAAAA,UAAS,IAAvC,eAAO6B,EAAP,KAAgBI,EAAhB,KACA,GAA0CjC,EAAAA,EAAAA,UAA8B,WAAxE,eAAOkC,EAAP,KAAsBC,EAAtB,MAEAhC,EAAAA,EAAAA,YAAU,WACN,IAAIiC,EAAc,WACdD,EAAiB,UAIrB,OADE,OAAFlC,QAAE,IAAFA,GAAAA,EAAIU,iBAAiB,OAAQyB,GACtB,WACD,OAAFnC,QAAE,IAAFA,GAAAA,EAAIO,oBAAoB,OAAQ4B,MAErC,CAACnC,IAUJ,OACI,4BACI,0BACI,SAACoC,EAAA,EAAD,CACIC,YAAY,sBACZC,MAAM,OAAOC,QAAS,WACtBC,GAAI,CAACC,GAAI,OAAQC,GAAI,QACrBC,MAAOf,EACPgB,SAAU,SAAC5B,GAAD,OAAOgB,EAAWhB,EAAE6B,cAAcF,aAIpD,gBAAKrB,UAAWC,EAAAA,iBAAhB,UACI,SAAC,IAAD,CAAcuB,SAAU,OAAQC,QArBxB,WACXnB,IAGH,OAAF5B,QAAE,IAAFA,GAAAA,EAAIgD,KAAKpB,GACTI,EAAW,MAiBWiB,SAAiB,OAAPjD,GAAiC,UAAlBiC,UAOvD,EA/HiB,WACb,OACI,0BACI,SAACnC,EAAD","sources":["webpack://my-app/./src/pages/chat/Messages.module.css?ad73","pages/chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messagesContainer\":\"Messages_messagesContainer__L3Ial\",\"messageImg\":\"Messages_messageImg__l3E12\"};","import s from './Messages.module.css'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {TextField} from \"@mui/material\";\r\nimport {CustomButton} from \"../../common/Button/Button\";\r\n\r\nexport type ChatMessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n}\r\n\r\nconst ChatPage = () => {\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Chat = () => {\r\n    const [ws, setWs] = useState<WebSocket | null>(null)\r\n\r\n    useEffect(() => {\r\n        let socket: WebSocket;\r\n        const closeHandler = () => {\r\n            setTimeout(createChannel, 3000);\r\n        }\r\n\r\n        function createChannel() {\r\n\r\n            socket?.removeEventListener('close', closeHandler)\r\n            socket?.close()\r\n\r\n            socket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n            socket.addEventListener('close', closeHandler)\r\n            setWs(socket)\r\n        }\r\n\r\n        createChannel()\r\n\r\n        return () => {\r\n            socket.removeEventListener('close', closeHandler)\r\n            socket.close()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [ws])\r\n\r\n    return (\r\n        <div>\r\n            <Messages ws={ws}/>\r\n            <AddMessageChatForm ws={ws}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Messages: React.FC<{ ws: WebSocket | null }> = ({ws}) => {\r\n\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n    let onMessageHandler = (e: MessageEvent) => {\r\n        let newMesseges = JSON.parse(e.data)\r\n        setMessages((preyMessages) => [...preyMessages, ...newMesseges])\r\n    }\r\n    useEffect(() => {\r\n        ws?.addEventListener('message', onMessageHandler)\r\n\r\n        return () => {\r\n            ws?.removeEventListener('message', onMessageHandler)\r\n        }\r\n    }, [ws])\r\n\r\n    return (\r\n        <div className={s.messagesContainer}>\r\n            {messages.map((m, index) => <Message key={index} message={m}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({message}) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={message.photo} className={s.messageImg}/> <b>{message.userName}</b>\r\n            <br/>\r\n            {message.message}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageChatForm: React.FC<{ ws: WebSocket | null }> = ({ws}) => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [isReadyStatus, setIsReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n\r\n    useEffect(() => {\r\n        let openHandler = () => {\r\n            setIsReadyStatus('ready')\r\n        }\r\n\r\n        ws?.addEventListener('open', openHandler)\r\n        return () => {\r\n            ws?.removeEventListener('open', openHandler)\r\n        }\r\n    }, [ws])\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        ws?.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TextField\r\n                    placeholder=\"Enter yore message.\"\r\n                    color=\"info\" variant={'outlined'}\r\n                    sx={{mb: '10px', ml: '10px'}}\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.currentTarget.value)}\r\n                />\r\n\r\n            </div>\r\n            <div className={s.formCustomButton}>\r\n                <CustomButton children={'Send'} onClick={sendMessage}\r\n                              disabled={ws === null && isReadyStatus !== 'ready'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChatPage"],"names":["Chat","useState","ws","setWs","useEffect","socket","closeHandler","setTimeout","createChannel","removeEventListener","close","WebSocket","addEventListener","Messages","AddMessageChatForm","messages","setMessages","onMessageHandler","e","newMesseges","JSON","parse","data","preyMessages","className","s","map","m","index","Message","message","src","photo","userName","setMessage","isReadyStatus","setIsReadyStatus","openHandler","TextField","placeholder","color","variant","sx","mb","ml","value","onChange","currentTarget","children","onClick","send","disabled"],"sourceRoot":""}